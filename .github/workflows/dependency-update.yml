name: Dependency Update

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Setup pnpm
        uses: pnpm/action-setup@v2

      - name: Get pnpm store directory
        id: pnpm-store
        shell: bash
        run: |
          store_path=$(pnpm store path --silent)
          if [ -z "$store_path" ]; then
              echo "::error::Failed to get pnpm store path"
            exit 1
          fi
          echo "Using pnpm store path: $store_path"
          echo "store_path=$store_path" >> $GITHUB_OUTPUT

      - name: Cache pnpm store
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-store.outputs.store_path }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm build

      - name: Update dependencies with our own tool
        run: |
          # Use our own tool to update catalog dependencies
          node bin/pcu.js update --target minor --dry-run > update-plan.txt

          # If there are updates available, apply them
          if [ -s update-plan.txt ]; then
            echo "Updates available:"
            cat update-plan.txt
            node bin/pcu.js update --target minor
          else
            echo "No updates available"
            exit 0
          fi

      - name: Run tests after update
        run: pnpm test

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update catalog dependencies'
          title: 'chore: update catalog dependencies'
          body: |
            ## Catalog Dependencies Update

            This PR updates catalog dependencies to their latest minor versions.

            ### Changes

            ```
            $(cat update-plan.txt)
            ```

            ### Validation

            - ✅ Build successful
            - ✅ Tests passing
            - ✅ Type checking passed

            This update was automatically generated by the `pnpm-catalog-updates` tool.
          branch: chore/update-catalog-dependencies
          delete-branch: true
          base: main
          labels: |
            dependencies
            automated
